Analyze:
Series of Insertions : This method works by adding a new entry to a heap by starting at the next available position for a leaf. It will follow a path from this leaf toward the root until the correct position for the new entry. In the worst case, this method follows a path from a leaf to the root which is the height of a complete tree having n nodes which is log2 (n +1) rounded up. Thus, the add method is O(log n) when following the rules for Big Oh Notation for ADDING onto the heap. Following this, to create a heap is O( n log n).
Optimal Method (also known as ”reheap” ): The method for reheap follows a path from the root to a leaf, which means the number of nodes on this path is less than or equal to the height h of the heap. Thus, it is O(h) which is log2 (n +1) rounded up, following the rules of Big Oh Notation, reheap is an O(log n) operation to ADD onto the heap. Following this, to create a heap is O(n). The reason for this is because reheap is an O(hi) operation where hi is height of the subtree rooted at index I, and in worse case the heap would be a full tree of height h. This is O(2^h) which is equivalent to O(n), where h is the height of the full tree with n nodes.
NOTE: For option one, the results vary in range because the numbers are randomized
Average swaps for series of insertions: 106-110(approx.)
Average swaps for optimal method: 85-90(approx.)
For option two, the results are unique because the entries are fixed for 1-100.
SAMPLE OUTPUT:
Please select how to test the program: 
(1) 20 sets of 100 randomly generated integers
(2) Fixed integer values 1-100 
Enter choice: 1

Average swaps for series of insertions: 105.6
Average swaps for optimal method: 88.75
============================================================
Please select how to test the program: 
(1) 20 sets of 100 randomly generated integers
(2) Fixed integer values 1-100 
Enter choice: 2

Heap built using series of insertions: 100,94,99,77,93,98,61,68,76,84,... 
Number of swaps: 480
Heap after 10 removals: 90,89,62,77,88,53,61,68,76,84,... 

Heap built using optimal method: 100,95,99,79,94,98,63,71,78,87,... 
Number of swaps: 96
Heap after 10 removals: 90,89,63,79,88,55,62,71,78,87,... 

